{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/edurn/Desktop/Adalab/Rick-and-Morty/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterList from \"./CharacterList\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport getDataFromApi from \"../services/getDataFromApi\"; //API\n\nconst App = () => {\n  _s();\n\n  const [items, setUsers] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\"); //hacemos un useState para llamar al estado de los objetos del fetch\n\n  useEffect(() => {\n    getDataFromApi().then(data => {\n      setUsers(data);\n    });\n  }, []); // [] array vacío para que no se haga un bucle infinito\n  //EVENTO PARA EJECUTAR LA ACCION DE FILTERS\n\n  const handleFilter = data => {\n    setNameFilter(data.value);\n  }; //RENDER\n\n\n  const filteredItems = items.filter(item => {\n    return item.name.toUpperCase().includes(nameFilter.toUpperCase());\n  });\n\n  const renderUserDetail = props => {\n    const itemId = parseInt(props.match.params.id);\n    const foundItem = items.find(item => {\n      return itemId === item.id;\n    });\n\n    if (foundItem !== undefined) {\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        id: foundItem.id,\n        name: foundItem.name,\n        status: foundItem.status,\n        species: foundItem.species,\n        image: foundItem.image,\n        origin: foundItem.origin,\n        episodes: foundItem.episodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Character not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CharacterList, {\n          items: filteredItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user/:id\",\n        render: renderUserDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"JjclcShqDV4gw28KASeqs56Ir0I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/edurn/Desktop/Adalab/Rick-and-Morty/src/components/App.js"],"names":["React","useEffect","useState","Route","Switch","CharacterList","Header","Filters","CharacterDetail","getDataFromApi","App","items","setUsers","nameFilter","setNameFilter","then","data","handleFilter","value","filteredItems","filter","item","name","toUpperCase","includes","renderUserDetail","props","itemId","parseInt","match","params","id","foundItem","find","undefined","status","species","image","origin","episodes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B,C,CAGA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C,CAFgB,CAGhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,cAAc,GAAGM,IAAjB,CAAuBC,IAAD,IAAU;AAC9BJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT,CAJgB,CAShB;AAEA;;AAEA,QAAMC,YAAY,GAAID,IAAD,IAAU;AAC7BF,IAAAA,aAAa,CAACE,IAAI,CAACE,KAAN,CAAb;AACD,GAFD,CAbgB,CAiBhB;;;AAEA,QAAMC,aAAa,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAU;AAC3C,WAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCX,UAAU,CAACU,WAAX,EAAjC,CAAP;AACD,GAFqB,CAAtB;;AAIA,QAAME,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAMC,MAAM,GAAGC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAvB;AACA,UAAMC,SAAS,GAAGrB,KAAK,CAACsB,IAAN,CAAYZ,IAAD,IAAU;AACrC,aAAOM,MAAM,KAAKN,IAAI,CAACU,EAAvB;AACD,KAFiB,CAAlB;;AAGA,QAAIC,SAAS,KAAKE,SAAlB,EAA6B;AAC3B,0BACE,QAAC,eAAD;AACE,QAAA,EAAE,EAAEF,SAAS,CAACD,EADhB;AAEE,QAAA,IAAI,EAAEC,SAAS,CAACV,IAFlB;AAGE,QAAA,MAAM,EAAEU,SAAS,CAACG,MAHpB;AAIE,QAAA,OAAO,EAAEH,SAAS,CAACI,OAJrB;AAKE,QAAA,KAAK,EAAEJ,SAAS,CAACK,KALnB;AAME,QAAA,MAAM,EAAEL,SAAS,CAACM,MANpB;AAOE,QAAA,QAAQ,EAAEN,SAAS,CAACO;AAPtB;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAZD,MAYO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GApBD;;AAsBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,YAAY,EAAEtB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,MAAM,EAAEM;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAYD,CAzDD;;GAAMf,G;;KAAAA,G;AA2DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterList from \"./CharacterList\";\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport getDataFromApi from \"../services/getDataFromApi\";\n\n\n//API\n\nconst App = () => {\n  const [items, setUsers] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  //hacemos un useState para llamar al estado de los objetos del fetch\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setUsers(data);\n    });\n  }, []);\n  // [] array vacío para que no se haga un bucle infinito\n\n  //EVENTO PARA EJECUTAR LA ACCION DE FILTERS\n\n  const handleFilter = (data) => {\n    setNameFilter(data.value);\n  };\n\n  //RENDER\n\n  const filteredItems = items.filter((item) => {\n    return item.name.toUpperCase().includes(nameFilter.toUpperCase());\n  });\n\n  const renderUserDetail = (props) => {\n    const itemId = parseInt(props.match.params.id);\n    const foundItem = items.find((item) => {\n      return itemId === item.id;\n    });\n    if (foundItem !== undefined) {\n      return (\n        <CharacterDetail\n          id={foundItem.id}\n          name={foundItem.name}\n          status={foundItem.status}\n          species={foundItem.species}\n          image={foundItem.image}\n          origin={foundItem.origin}\n          episodes={foundItem.episodes}\n        />\n      );\n    } else {\n      return <p>Character not found</p>;\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Filters handleFilter={handleFilter} />\n      <Switch>\n        <Route exact path=\"/\">\n          <CharacterList items={filteredItems} />\n        </Route>\n        <Route path=\"/user/:id\" render={renderUserDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}